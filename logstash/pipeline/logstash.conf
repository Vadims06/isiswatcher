input { 
    file { 
        path => "/home/watcher/watcher/logs/watcher*.isis.log" 
        id => "watcher" 
    } 
} 
filter {
    if "changed" in [message] {
        if "temetric" in [message] {
            # 2024-12-29T13:20:50.398Z,isis-watcher,1,temetric,0200.1001.0002,changed,0_17_19_20_21_22_26_29_30,1000000000,1000000000,1000000000_1000000008_1000000016_1000000024_1000000032_1000000040_1000000048_1000000056,11223344,0200.1001.0003,2024-07-28T18:03:05Z,49.0001,01Jan2023_00h00m00s_7_hosts,10.1.23.3,10.1.23.2

            dissect { 
                    mapping => { "message" => "%{watcher_time},%{watcher_name},%{level_number},%{event_name},%{event_object},%{event_status},%{admin_groups},%{max_link_bw},%{max_rsrv_link_bw},%{unreserved_bandwidth_0}_%{unreserved_bandwidth_1}_%{unreserved_bandwidth_2}_%{unreserved_bandwidth_3}_%{unreserved_bandwidth_4}_%{unreserved_bandwidth_5}_%{unreserved_bandwidth_6}_%{unreserved_bandwidth_7},%{temetric},%{event_detected_by},%{graph_time},%{area_num},%{asn},%{local_ip_address},%{remote_ip_address}"}
            }
            mutate {
                split => { "admin_groups" => "_" }
                add_field => {
                    "[@metadata][elasticsearch_index]" => "isis-watcher-temetric-changes"
                    "[@metadata][mongo_id]" => "output_mongo_temetric"
                    "[@metadata][mongo_collection_name]" => "temetric_change"
                    "[@metadata][webhook_item_value]" => "IS-IS L%{level_number} te link attributes changed between:%{event_object}-%{event_detected_by} new: admin_groups:%{admin_groups},max_link_bw:%{max_link_bw},max_rsrv_link_bw:%{max_rsrv_link_bw},unreserved_bandwidth_0:%{unreserved_bandwidth_0},unreserved_bandwidth_1:%{unreserved_bandwidth_1},unreserved_bandwidth_2:%{unreserved_bandwidth_2},unreserved_bandwidth_3:%{unreserved_bandwidth_3},unreserved_bandwidth_4:%{unreserved_bandwidth_4},unreserved_bandwidth_5:%{unreserved_bandwidth_5},unreserved_bandwidth_6:%{unreserved_bandwidth_6},unreserved_bandwidth_7:%{unreserved_bandwidth_7},temetric:%{temetric}, detected by:%{event_detected_by}, local ip address:%{local_ip_address}"
                }
            }
        }
        else if "metric" in [message] {
            # 2024-10-08T22:55:32Z,watcher1,1,metric,0200.1001.0003,changed,old_cost:5,new_cost:-1,0200.1001.0002,10Oct2024_00h00m00s_7_hosts,49.0002,12345,10.1.23.2,10.1.23.3

            dissect { 
                    mapping => { "message" => "%{watcher_time},%{watcher_name},%{level_number},%{event_name},%{event_object},%{event_status},old_cost:%{old_cost},new_cost:%{new_cost},%{event_detected_by},%{graph_time},%{area_num},%{asn},%{local_ip_address},%{remote_ip_address}"}  
            }
            if "-1" == [new_cost] {
                mutate {
                    add_field => {
                        "[@metadata][elasticsearch_index]" => "isis-watcher-updown-events"
                        "[@metadata][mongo_id]" => "output_mongo_neighbors"
                        "[@metadata][mongo_collection_name]" => "isis_neighbor_up_down"
                        "[@metadata][zabbix_host]" => "isis_neighbor_up_down" 
                        "[@metadata][z_object_item_name]" => "isis_neighbor_up_down"

                        "[@metadata][z_item_value]" => "IS-IS L%{level_number} down between %{event_object}-%{event_detected_by}, cost:%{new_cost}, detected by:%{event_detected_by}, local ip address:%{local_ip_address}"
                        "[@metadata][webhook_item_value]" => "IS-IS L%{level_number} down between %{event_object}-%{event_detected_by}, cost:%{new_cost}, detected by:%{event_detected_by}, local ip address:%{local_ip_address}"
                        "object_status" => "down" }}
            } else if "-1" == [old_cost] {
                mutate {
                    add_field => {
                        "[@metadata][elasticsearch_index]" => "isis-watcher-updown-events"
                        "[@metadata][mongo_id]" => "output_mongo_neighbors"
                        "[@metadata][mongo_collection_name]" => "isis_neighbor_up_down"
                        "[@metadata][zabbix_host]" => "isis_neighbor_up_down" 
                        "[@metadata][z_object_item_name]" => "isis_neighbor_up_down"

                        "[@metadata][z_item_value]" => "IS-IS L%{level_number} up between %{event_object}-%{event_detected_by}, cost:%{new_cost}, detected by:%{event_detected_by}, local ip address:%{local_ip_address}"
                        "[@metadata][webhook_item_value]" => "IS-IS L%{level_number} up between %{event_object}-%{event_detected_by}, cost:%{new_cost}, detected by:%{event_detected_by}, local ip address:%{local_ip_address}"
                        "object_status" => "up" }}
            } else {
                mutate {
                    add_field => {
                        "[@metadata][elasticsearch_index]" => "isis-watcher-costs-changes"
                        "[@metadata][mongo_id]" => "output_mongo_cost"
                        "[@metadata][mongo_collection_name]" => "isis_link_cost_change"
                        "[@metadata][zabbix_host]" => "isis_link_cost_change" 
                        "[@metadata][z_item_value]" => "IS-IS L%{level_number} link cost changed between:%{event_object}-%{event_detected_by}, old:%{old_cost}, new:%{new_cost}, detected by:%{event_detected_by}, local ip address:%{local_ip_address}"
                        "[@metadata][webhook_item_value]" => "IS-IS L%{level_number} link cost changed between:%{event_object}-%{event_detected_by}, old:%{old_cost}, new:%{new_cost}, detected by:%{event_detected_by}, local ip address:%{local_ip_address}"
                        "object_status" => "changed" } }
            }
        }
        else if "network" in [message] {
            # 2024-08-31T12:56:51Z,watcher1,1,network,10.10.10.1/32,changed,old_cost:10,new_cost:-1,0200.1025.0002,10Oct2024_00h00m00s_7_hosts,49.0002,12345,internal,0
            dissect { 
                mapping => { "message" => "%{watcher_time},%{watcher_name},%{level_number},%{event_name},%{event_object},%{event_status},old_cost:%{old_cost},new_cost:%{new_cost},%{event_detected_by},%{graph_time},%{area_num},%{asn},%{subnet_type},%{int_ext_subtype}"}  
            }
            if "-1" == [new_cost] {
                mutate {
                    add_field => {
                        "[@metadata][elasticsearch_index]" => "isis-watcher-updown-events"
                        "[@metadata][mongo_id]" => "output_mongo_neighbors"
                        "[@metadata][mongo_collection_name]" => "isis_network_up_down"
                        "[@metadata][zabbix_host]" => "isis_network_up_down" 
                        "[@metadata][z_object_item_name]" => "isis_network_up_down"
                        "[@metadata][z_item_value]" => "IS-IS L%{level_number} %{subnet_type} %{event_object} network down, cost:%{old_cost}, detected by:%{event_detected_by}"
                        "[@metadata][webhook_item_value]" => "IS-IS L%{level_number} %{subnet_type} %{event_object} network down, cost:%{old_cost}, detected by:%{event_detected_by}"
                        "object_status" => "down" } }
            } else if "-1" == [old_cost] {
                mutate {
                    add_field => {
                        "[@metadata][elasticsearch_index]" => "isis-watcher-updown-events"
                        "[@metadata][mongo_id]" => "output_mongo_neighbors"
                        "[@metadata][mongo_collection_name]" => "isis_network_up_down"
                        "[@metadata][zabbix_host]" => "isis_network_up_down" 
                        "[@metadata][z_object_item_name]" => "isis_network_up_down"
                        "[@metadata][z_item_value]" => "IS-IS L%{level_number} %{subnet_type} %{event_object} network up, cost:%{new_cost}, detected by:%{event_detected_by}"
                        "[@metadata][webhook_item_value]" => "IS-IS L%{level_number} %{subnet_type} %{event_object} network up, cost:%{new_cost}, detected by:%{event_detected_by}"
                        "object_status" => "up" } }
            } else {
                mutate {
                    add_field => {
                        "[@metadata][elasticsearch_index]" => "isis-watcher-costs-changes"
                        "[@metadata][mongo_id]" => "output_mongo_cost"
                        "[@metadata][mongo_collection_name]" => "isis_network_cost_change"
                        "[@metadata][zabbix_host]" => "isis_network_cost_change" 
                        "[@metadata][z_object_item_name]" => "isis_stub_network_cost_change"
                        "[@metadata][z_item_value]" => "IS-IS L%{level_number} %{subnet_type} network cost changed:%{event_object}, old:%{old_cost}, new:%{new_cost}, detected by:%{event_detected_by}"
                        "[@metadata][webhook_item_value]" => "IS-IS L%{level_number} %{subnet_type} network cost changed:%{event_object}, old:%{old_cost}, new:%{new_cost}, detected by:%{event_detected_by}"
                        "object_status" => "changed" } }
            }
        }
    } else {
        drop {}
    }
    # Up/Down event for ISIS neighbors and subnets covered in changed event section!
    # 2024-10-08T22:47:39Z,watcher1,2,network,4ffe:10::5:0:0:d8/127,up,0200.1001.0005,,49.0002,12345
    # 2024-10-08T22:55:36Z,watcher1,2,host,0200.1001.0004,down,0200.1001.0005,,49.0002,12345
    date {
        match => [ "watcher_time", "ISO8601" ]
        target => "watcher_time_iso8601"
    }
    mutate {
        add_field => { "protocol" => "isis" }
        remove_field => ["@version", "message"]
    }
}
output { 
    if "${DEBUG_BOOL:False}" == "True" {
        stdout {
            codec  => rubydebug {
                metadata => true
            }
        }
    }
    if "${EXPORT_TO_MONGO_BOOL:False}" == "True" {
        # If EXPORT_TO_MONGO_BOOL is False - it doesn't block the pipeline #
        # If EXPORT_TO_MONGO_BOOL is True and MongoDB is not available - block the pipeline #
        mongodb {
            id => "%{[@metadata][mongo_id]}"
            collection => "%{[@metadata][mongo_collection_name]}"
            database => "${MONGODB_DATABASE:admin}"
            uri => "mongodb://${MONGODB_USERNAME:admin}:${MONGODB_PASSWORD:myadminpassword}@${MONGODB_IP:127.0.0.1}:${MONGODB_PORT:27017}"        
            codec => "json"
            isodate => true
        } 
    }
    if "${EXPORT_TO_TOPOLOGRAPH_SOCKET:}" == "True" {
        http {
            url => "http://${TOPOLOGRAPH_HOST:}:${TOPOLOGRAPH_PORT:}/websocket"
            format => "json"
            http_method => "post"
            content_type => "application/json"
            automatic_retries => 0
            retry_failed => false
        }
    }
    ########## Elastic plugin ###########
    # When the Elastic output plugin fails to connect to the ELK host, it will block all other outputs and it ignores "EXPORT_TO_ELASTICSEARCH_BOOL" value. 
    # Regardless of EXPORT_TO_ELASTICSEARCH_BOOL being False, it will connect to Elastic host ;( 
    # The solution - uncomment this portion of config in case of having running ELK.
    #
    # if "${EXPORT_TO_ELASTICSEARCH_BOOL:False}" == "True" {
    #     elasticsearch { 
    #         hosts => "${ELASTIC_IP:172.25.80.1}:${ELASTIC_PORT:9200}"
    #         user => "${ELASTIC_USER_LOGIN:elastic}"
    #         password => "${ELASTIC_USER_PASS:changeme}"
    #         ecs_compatibility => disabled
    #         index => "%{[@metadata][elasticsearch_index]}"
    #     }  }
    if "${EXPORT_TO_ZABBIX_BOOL:False}" == "True" {
        # Doesn't block the pipeline. If Zabbix host is unavailable, only ERROR message will be printed
        zabbix {
            zabbix_host => "[@metadata][zabbix_host]"
            zabbix_server_host => "${ZABBIX_HOST:127.0.0.1}"
            zabbix_key => "[@metadata][z_object_item_name]"
            zabbix_value => "[@metadata][z_item_value]"
        } }
    if "${EXPORT_TO_WEBHOOK_URL_BOOL:False}" == "True" {
        http {
            url => "${WEBHOOK_URL:localhost}"
            format => "json"
            http_method => "post"
            mapping => ["text", "%{[@metadata][webhook_item_value]}"]
            automatic_retries => 1
            retry_failed => false
        }
    }
}